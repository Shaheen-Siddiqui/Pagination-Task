{"ast":null,"code":"import { useState, useEffect } from 'react';\n/**\n * React hook to check when a valid media-query-string changes\n * (i.e. when the media query test starts or stops evaluating to true)\n *\n * @param {string} mediaQueryString valid media query string. E.g.: `(min-width: 425px)`\n * @returns {boolean} media-query matches value\n */\n\nfunction useMediaQuery(mediaQueryString) {\n  const [queryMatch, setQueryMatch] = useState(null);\n  useEffect(() => {\n    const setMediaMatchHandler = e => setQueryMatch(e.matches);\n\n    const mediaQueryList = window.matchMedia(mediaQueryString);\n    setMediaMatchHandler(mediaQueryList);\n    mediaQueryList.addListener(setMediaMatchHandler);\n    return () => mediaQueryList.removeListener(setMediaMatchHandler);\n  }, [mediaQueryString]);\n  return queryMatch;\n}\n\nexport default useMediaQuery;","map":{"version":3,"sources":["/home/navgurukul/order-mades/node_modules/use-media-query-hook/es/index.js"],"names":["useState","useEffect","useMediaQuery","mediaQueryString","queryMatch","setQueryMatch","setMediaMatchHandler","e","matches","mediaQueryList","window","matchMedia","addListener","removeListener"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,gBAAvB,EAAyC;AACvC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,IAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,oBAAoB,GAAGC,CAAC,IAAIF,aAAa,CAACE,CAAC,CAACC,OAAH,CAA/C;;AAEA,UAAMC,cAAc,GAAGC,MAAM,CAACC,UAAP,CAAkBR,gBAAlB,CAAvB;AAEAG,IAAAA,oBAAoB,CAACG,cAAD,CAApB;AAEAA,IAAAA,cAAc,CAACG,WAAf,CAA2BN,oBAA3B;AAEA,WAAO,MAAMG,cAAc,CAACI,cAAf,CAA8BP,oBAA9B,CAAb;AACD,GAVQ,EAUN,CAACH,gBAAD,CAVM,CAAT;AAYA,SAAOC,UAAP;AACD;;AAED,eAAeF,aAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\n/**\n * React hook to check when a valid media-query-string changes\n * (i.e. when the media query test starts or stops evaluating to true)\n *\n * @param {string} mediaQueryString valid media query string. E.g.: `(min-width: 425px)`\n * @returns {boolean} media-query matches value\n */\nfunction useMediaQuery(mediaQueryString) {\n  const [queryMatch, setQueryMatch] = useState(null);\n\n  useEffect(() => {\n    const setMediaMatchHandler = e => setQueryMatch(e.matches);\n\n    const mediaQueryList = window.matchMedia(mediaQueryString);\n\n    setMediaMatchHandler(mediaQueryList);\n\n    mediaQueryList.addListener(setMediaMatchHandler);\n\n    return () => mediaQueryList.removeListener(setMediaMatchHandler);\n  }, [mediaQueryString]);\n\n  return queryMatch;\n}\n\nexport default useMediaQuery;\n"]},"metadata":{},"sourceType":"module"}